{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["console","log","App","useState","setError","setIsLoaded","setItems","useEffect","fetch","then","res","json","result","error","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAKAA,QAAQC,IADI,qHAoCGC,MAjCf,WAAgB,IAAD,EACUC,qBADV,gCAEaA,mBAAS,OAFtB,mBAECC,GAFD,aAGmBD,oBAAS,GAH5B,mBAGIE,GAHJ,aAIaF,mBAAS,IAJtB,mBAICG,GAJD,WAyBb,OAnBAC,qBAAU,WACRC,MAAM,yCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCP,GAAY,GACZC,EAASM,MAKX,SAACC,GACCR,GAAY,GACZD,EAASS,QAGd,IAID,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,kBCtBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.9d3d883c.chunk.js","sourcesContent":["import {React, useState,useEffect} from \"react\"\nimport './App.css';\n\nconst packageId = \"64b54586-6180-4485-83eb-81e8fae3b8fe\";\nconst url = \"https://ckan0.cf.opendata.inter.prod-toronto.ca/api/3/action/package_show?id=64b54586-6180-4485-83eb-81e8fae3b8fe\"\nconsole.log(url)\n\nfunction App() {\n  const [data,setData] = useState()\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://www.yourdomain.ie/movies/list\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])  \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}