{"version":3,"sources":["components/useResizeObserver.js","components/Streamgraph.js","components/DateSlider.js","components/Loading.js","components/Map.js","components/StatButtons.js","App.js","reportWebVitals.js","index.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","Streamgraph","streamInputData","streamHoverFunction","viewDate","streamClickFunction","timeStat","caseStat","severeStat","mapHoverID","ageStat","svgStreamRef","useRef","streamWrapperRef","streamDimensions","d3TimeFormat","d3","svgStream","streamWidth","width","streamHeight","height","keys","Set","map","eachRecord","arrayData","date","dateData","filter","toString","lineOfArrayData","i","length","neighbourhoodDateStat","push","stackedData","maxOfStack","d","minOfStack","xScale","domain","range","yScale","nice","areaPlot","x","data","y0","y1","curve","selectAll","join","attr","replace","style","on","e","this","remove","console","log","streamHoverHood","Fragment","viewClassName","className","DateSlider","allDates","sliderFunction","wrapperRef","svgSliderRef","sliderDimensions","svgSlider","startDate","dateString","Date","setHours","endDate","dateWidth","yearSlider","sliderBottom","min","max","default","step","tickFormat","displayValue","handle","type","size","val","call","Loading","totalRecords","curRecords","barWidth","setBarWidth","Math","round","Map","mapInputData","mapClickFunction","mapHoverFunction","mapToggleAllFunc","streamHoverID","wrapperMapRef","svgMapRef","mapDimensions","svgMap","mapWidth","mapHeight","projMerc","center","translate","fitSize","mapPath","boundaryPlot","projection","mapMouseHover","slice","features","properties","AREA_NAME","mapHoverHood","onClick","StatButtons","timeStatFunction","caseStatFunction","severeStatFunction","ageStatFunction","sourceStatFunction","outcomeStatFunction","genderStatFunction","onChange","event","target","value","element","App","setTotalRecords","setCurRecords","newData","setNewData","allData","setAllData","inputData","setInputData","setStreamInputData","setMapInputData","setStreamHoverID","setMapHoverID","setAllDates","setViewDate","setTimeStat","setCaseStat","setSevereStat","sourceStat","setSourceStat","setAgeStat","setOutcomeStat","setGenderStat","baseUrl","$","ajax","url","cache","dataType","success","error","loops","concat","loadingScreen","document","querySelector","newAllDates","newInputData","streamHoodID","streamHoodName","mapHoodName","mapBoundary","classed","selectStreamData","newStreamData","toBeRemoved","mapHoodID","toggleVal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00371240.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nconst useResizeObserver = ref => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      entries.forEach(entry => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;","import React , {useEffect, useRef, useState} from \"react\";\r\nimport * as d3 from \"d3\";\r\n// import {areaLabel} from \"d3-area-label\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\nimport useResizeObserver from \"./useResizeObserver\";\r\n\r\nfunction Streamgraph({streamInputData,streamHoverFunction,streamClickFunction,viewDate,timeStat,caseStat,severeStat,ageStat,mapHoverID}){\r\n    \r\n    const svgStreamRef = useRef();\r\n    const streamWrapperRef = useRef();\r\n    var streamDimensions = useResizeObserver(streamWrapperRef);\r\n    const d3TimeFormat = d3.timeFormat(\"%Y-%m-%d\")\r\n    \r\n    useEffect(()=>{\r\n        if (!streamDimensions){return }\r\n        if (streamInputData){\r\n            // console.log(timeStat,caseStat,severeStat,streamInputData.length)\r\n            const svgStream = d3.select(svgStreamRef.current)\r\n            var streamWidth = streamDimensions.width;\r\n            var streamHeight = streamDimensions.height;\r\n            var streamMargin_left = 10;\r\n            var streamMargin_right = 10;\r\n            var streamMargin_top = 10;\r\n            var streamMargin_bottom = 10;\r\n\r\n            var keys = [... new Set (streamInputData.map((eachRecord)=>{return eachRecord['Neighbourhood Name']}))];\r\n\r\n            // filtering the streamInputData according to stats selected\r\n            var arrayData = [];    \r\n            \r\n            for (var date = viewDate[0];date<=viewDate[1];date=date+1000*60*60*24){\r\n                // console.log(d3TimeFormat(viewDate[0]),viewDate[1],d3TimeFormat(date))\r\n                var dateData = streamInputData.filter((eachRecord)=>{\r\n                    // console.log(eachRecord[timeStat])\r\n                    return eachRecord[timeStat]==d3TimeFormat(date).toString()\r\n                })\r\n                // if (dateData.length){console.log(dateData[0][timeStat])}\r\n                var lineOfArrayData = {'date':date}\r\n                for (var i = 0;i<keys.length;i++){\r\n                    var neighbourhoodDate = dateData.filter((eachRecord)=>{return eachRecord['Neighbourhood Name']==keys[i]})\r\n                    var neighbourhoodDateStat = neighbourhoodDate.length\r\n                    lineOfArrayData[keys[i]] = neighbourhoodDateStat\r\n                }\r\n                arrayData.push(lineOfArrayData)\r\n            }\r\n            // if (arrayData.length){console.log(arrayData.length,keys.length,(viewDate[1]-viewDate[0])/(1000*60*60*24))}\r\n            \r\n            var stackedData = d3.stack().keys(keys)(arrayData)\r\n            // console.log(\"stackedData\",stackedData)\r\n            if (stackedData[stackedData.length-1]){\r\n                var maxOfStack = d3.max(stackedData, d => d3.max(d, d=> d[1]));\r\n                var minOfStack = d3.min(stackedData, d => d3.max(d, d=> d[0]));\r\n                var xScale = d3.scaleLinear().domain([(viewDate[0]),(viewDate[1])]).range([3*streamMargin_left,streamWidth-streamMargin_right]);\r\n                var yScale = d3.scaleLinear().domain([minOfStack - 0.1*minOfStack,maxOfStack+0.1*maxOfStack]).range([streamHeight-streamMargin_bottom,streamMargin_top]).nice();\r\n                var invertXScale = d3.scaleLinear().domain([streamMargin_left,streamWidth-streamMargin_right]).range([viewDate[0],viewDate[1]]);\r\n                // console.log(minOfStack,maxOfStack)\r\n                // console.log(xScale(viewDate[0]),yScale(121),viewDate)\r\n\r\n                var areaPlot = d3.area()\r\n                .x((d,i)=>{return xScale(d.data['date']);})\r\n                .y0((d,i)=>{return yScale(d[0]);})\r\n                .y1((d,i)=>{return yScale(d[1]);})\r\n                .curve(d3.curveBasis);\r\n\r\n                const streamMouseOver = function(e,i){\r\n                    d3.selectAll(\".myArea\").style(\"opacity\",\"0.5\")\r\n                    d3.select(this).style(\"opacity\",\"1\")\r\n                    streamHoverFunction(d3.select(this).attr(\"id\"))\r\n                }\r\n                const streamMouseLeave = function(e,i){\r\n                    d3.selectAll(\".myArea\").style(\"opacity\",\"0.8\")\r\n                    streamHoverFunction()\r\n                }\r\n\r\n                var streamGraph = svgStream.selectAll(\".myArea\")\r\n                .data(stackedData)\r\n                .join(\"path\")\r\n                .attr(\"class\",\"myArea\")\r\n                // give each stream an id that is the neighbourhood name but replace all special characters. if null then call it Unknown\r\n                .attr(\"id\",(d,i)=>{return d['key']?d['key'].replace(/[^A-Z0-9]/ig, \"_\"):'Unknown'})\r\n                .style(\"opacity\",\"0.8\")\r\n                .attr(\"d\",(d,i)=>{return areaPlot(d)})\r\n                // .style(\"fill\",(d,i)=>{return colorScale(sorter[d['key']]);})\r\n                .style(\"fill\",\"#f1f1f1\")\r\n                .style(\"stroke\",(d,i)=>{return \"black\"})\r\n                .style(\"stroke-width\",\"0.5\")\r\n                .on('mouseover',streamMouseOver)\r\n                .on('mouseleave',streamMouseLeave)\r\n\r\n            }\r\n            else{\r\n                svgStream.selectAll(\".myArea\").remove()\r\n                console.log(\"i got nothing\")\r\n            }\r\n        }\r\n    },[streamInputData,viewDate,caseStat,timeStat,severeStat,streamDimensions])\r\n\r\n    useEffect(()=>{\r\n        d3.selectAll(\".myArea\").style(\"fill\",\"#f1f1f1\").style(\"opacity\",\"0.8\")\r\n        if (mapHoverID){\r\n            var streamHoverHood = d3.select(\"#\"+mapHoverID)\r\n            // console.log(streamHoverHood)\r\n            if (streamHoverHood) {streamHoverHood.style(\"fill\",\"red\").style(\"opacity\",\"1\")}\r\n        }\r\n    },[mapHoverID])\r\n    \r\n\r\n    return(\r\n        <React.Fragment>\r\n            <BrowserView viewClassName = \"streamgraph browserView\">\r\n                {streamInputData.length}\r\n                <div className = \"streamgraph-wrapper browser\" ref = {streamWrapperRef}>\r\n                    <svg className = \"streamgraph-svg browser\" ref = {svgStreamRef}></svg>\r\n                </div>\r\n            </BrowserView>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Streamgraph;","import React, {useEffect, useState, useRef} from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\nimport useResizeObserver from \"./useResizeObserver\";\r\nimport { sliderBottom } from \"d3-simple-slider\";\r\n\r\nfunction DateSlider({allDates, sliderFunction}){\r\n\r\n    const wrapperRef = useRef();\r\n    const svgSliderRef = useRef();\r\n    const sliderDimensions = useResizeObserver(wrapperRef)\r\n    \r\n    useEffect(()=>{\r\n        const svgSlider = d3.select(svgSliderRef.current);\r\n        if(!sliderDimensions){return}\r\n        if (allDates.length!==0){\r\n            const d3TimeFormat = d3.timeFormat(\"%Y-%m-%d\")\r\n            var startDate = d3.min(allDates,dateString=>{return new Date(dateString).setHours(0,0,0,0)})\r\n            var endDate = d3.max(allDates,dateString=>{return new Date(dateString).setHours(0,0,0,0)})\r\n            // console.log((startDate),d3TimeFormat(endDate))\r\n            \r\n            var dateWidth = sliderDimensions.width;\r\n            var dateMargin_left = 10;\r\n            var dateMargin_right = 10;\r\n\r\n            // var endDate = 50;\r\n\r\n            var yearSlider = sliderBottom()\r\n                .min(startDate)\r\n                .max(endDate)\r\n                .width(dateWidth-dateMargin_left-dateMargin_right)\r\n                .default([startDate,endDate])\r\n                .step(1000 * 60 * 60 * 24)\r\n                .tickFormat((d)=>{return d3TimeFormat(d)})\r\n                .displayValue(true)\r\n                .handle(d3.symbol().type(d3.symbolCircle).size(200)())\r\n                .on('end',(val)=>{sliderFunction(val);})\r\n\r\n            svgSlider.selectAll(\".slider-group\")\r\n                .data([100])\r\n                .join(\"g\")\r\n                .attr(\"class\",\"slider-group\")\r\n                .call(yearSlider)\r\n                .attr(\"width\",dateWidth-dateMargin_left-dateMargin_right)\r\n\r\n            // document.querySelector(\".slider-wrapper\").innerHTML = \"innerHtml\"+(allDates.length)\r\n        }\r\n\r\n    },[allDates,sliderDimensions])\r\n\r\n    return(\r\n        <BrowserView viewClassName = \"slider browserView\">\r\n            {/* <p>{allDates.length}</p> */}\r\n            <div className = \"slider-wrapper browser\" ref = {wrapperRef}>\r\n                <svg className = \"slider-svg browser\" ref = {svgSliderRef}></svg>\r\n            </div>\r\n        </BrowserView>\r\n    )\r\n}\r\n\r\nexport default DateSlider;","import React, {useEffect, useState, useRef} from \"react\";\r\n\r\nfunction Loading({totalRecords,curRecords}){\r\n    \r\n    const [barWidth,setBarWidth] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        if (!totalRecords){return}\r\n        else{setBarWidth(100*curRecords/totalRecords)}\r\n    },[totalRecords,curRecords])\r\n\r\n    return(\r\n        <div className = \"loading-screen\">\r\n            <p>Loading {totalRecords} Records...</p>\r\n            <p>Completed {Math.round(100*curRecords/totalRecords)}%</p>\r\n            <div className = \"loading-bar-outer\">\r\n                <div className = \"loading-bar-inner\" style = {{width:barWidth+\"%\"}}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, {useEffect, useState, useRef} from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\nimport useResizeObserver from \"./useResizeObserver\";\r\n\r\nimport mapPath from \"../Neighbourhoods_Edited.json\";\r\n\r\nfunction Map({mapInputData,mapClickFunction,mapHoverFunction,mapToggleAllFunc,timeStat,caseStat,severeStat,ageStat,streamHoverID}){\r\n    const wrapperMapRef = useRef();\r\n    const svgMapRef = useRef();\r\n    const mapDimensions = useResizeObserver(wrapperMapRef)\r\n\r\n    useEffect(()=>{\r\n        const svgMap = d3.select(svgMapRef.current);\r\n        if (!mapDimensions){return}\r\n        if (mapInputData.length!=0){\r\n            // console.log(mapPath)\r\n            var mapWidth = mapDimensions.width;\r\n            var mapHeight = mapDimensions.height;\r\n            var mapMargin_left = 10;\r\n            var mapMargin_right = 10;\r\n            var mapMargin_top = 10;\r\n            var mapMargin_bottom = 10;\r\n\r\n            // var mapScaleFactor = d3.scaleLinear().domain([300,1920]).range([20000,30000])\r\n\r\n            \r\n            const projMerc = d3.geoMercator()\r\n\t    \t.center([-79.35, 43.73])\r\n\t    \t.translate([mapWidth/2,mapHeight/2])\r\n            .fitSize([mapWidth - mapMargin_left - mapMargin_right,mapHeight - mapMargin_top - mapMargin_bottom],mapPath)\r\n\t    \t// .scale(mapScaleFactor(width));\r\n\r\n    \t    const boundaryPlot = d3.geoPath().projection(projMerc);\r\n\r\n            const mapMouseDown = function(e,i){\r\n                // d3.select(this).classed(\"deselected\",!d3.select(this).classed(\"deselected\"))\r\n                mapClickFunction(i.properties.AREA_NAME)\r\n            }\r\n\r\n            const mapMouseHover = function(e,i){\r\n                d3.selectAll(\".boundary\").style(\"opacity\",\"0.5\")\r\n                d3.select(this).style(\"opacity\",\"1\")\r\n                mapHoverFunction(d3.select(this).attr(\"id\").slice(4,))\r\n            }\r\n\r\n            const mapMouseLeave = function(e,i){\r\n                d3.selectAll(\".boundary\").style(\"opacity\",\"1\")\r\n                mapHoverFunction()\r\n            }\r\n\r\n            svgMap.selectAll(\".boundary\")\r\n                .data(mapPath.features)\r\n                .join(\"path\")\r\n                .attr(\"class\",\"boundary\")\r\n                .attr(\"id\",(d,i)=>{return \"map_\"+d['properties']['AREA_NAME'].replace(/[^A-Z0-9]/ig,\"_\")})\r\n                .attr(\"d\",boundaryPlot)\r\n                .style(\"opacity\",\"0.8\")\r\n                .on(\"mousedown\",mapMouseDown)\r\n                .on(\"mouseover\",mapMouseHover)\r\n                .on(\"mousemove\",mapMouseHover)\r\n                .on(\"mouseleave\",mapMouseLeave)\r\n        }\r\n\r\n    },[mapInputData,mapDimensions])\r\n\r\n    useEffect(()=>{\r\n        d3.selectAll(\".boundary\").style(\"opacity\",\"0.8\")\r\n        if (streamHoverID){\r\n            d3.selectAll(\".boundary\").style(\"opacity\",\"0.5\")\r\n            var mapHoverHood = d3.select(\"#map_\"+streamHoverID)\r\n            // console.log(streamHoverHood)\r\n            if (mapHoverHood) {mapHoverHood.style(\"opacity\",\"1\")}\r\n        }\r\n\r\n    },[streamHoverID])\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <BrowserView viewClassName = \"map browserView\">\r\n                <div className = \"map-wrapper browser\" ref = {wrapperMapRef}>\r\n                    <div className = \"map-header browser\">\r\n                        <button className = \"map-button browser\" onClick = {function(){mapToggleAllFunc(\"selectall\")}}>Select All</button>\r\n                        <button className = \"map-button browser\" onClick = {function(){mapToggleAllFunc(\"deselectall\")}}>Deselect All</button>\r\n                    </div>\r\n                    <p>{mapInputData.length}</p>\r\n                    <svg className = \"map-svg browser\" ref = {svgMapRef}></svg>\r\n                </div>\r\n            </BrowserView>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Map","import React, {useEffect, useState, useRef} from \"react\";\r\n\r\nfunction StatButtons({\r\n    timeStatFunction,\r\n    caseStatFunction,\r\n    severeStatFunction,\r\n    ageStatFunction,\r\n    sourceStatFunction,\r\n    outcomeStatFunction,\r\n    genderStatFunction,\r\n}){\r\n    const timeStatOptions = ['Reported Date','Episode Date'];\r\n    const ageStatOptions = ['All Age Groups','19 and younger','20 to 29 years','30 to 39 years','40 to 49 years','50 to 59 years','60 to 69 years','70 to 79 years','80 to 89 years','90+'];\r\n    const severeStatOptions = ['All Levels of Severity','Ever Hospitalized','Ever Intubated','Ever in ICU','Currently Hospitalized','Currently in ICU','Currently Intubated']\r\n    const caseStatOptions = ['Count','Per-Capita']\r\n    const sourceStatOptions = ['All Sources','Household contact','Community','Close Contact','Travel','Sporadic','Outbreak Associated','No Information',]\r\n    const outcomeStatOptions = ['All Outcomes','Fatal','Active','Recovered']\r\n    const genderStatOptions = ['All Genders','Male','Female','Unknown']\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className = \"stat-buttons\">\r\n                <select \r\n                className = \"stat-button time-stat\" \r\n                onChange = {(event)=>{return timeStatFunction(event.target.value)}}\r\n                >\r\n                    {timeStatOptions.map(element=>{return <option value = {element} key = {element}>{element}</option>})}\r\n                </select>\r\n\r\n                <select \r\n                className = \"stat-button age-stat\"\r\n                onChange = {(event)=>{return ageStatFunction(event.target.value)}}\r\n                >\r\n                    {ageStatOptions.map(element=>{return <option value = {element} key = {element}>{element}</option>})}\r\n                </select>\r\n                \r\n                <select \r\n                className = \"stat-button outcome-stat\"\r\n                onChange = {(event)=>{return outcomeStatFunction(event.target.value)}}\r\n                >\r\n                    {outcomeStatOptions.map(element=>{return <option value = {element} key = {element}>{element}</option>})}\r\n                </select>\r\n\r\n                <select \r\n                className = \"stat-button gender-stat\"\r\n                onChange = {(event)=>{return genderStatFunction(event.target.value)}}\r\n                >\r\n                    {genderStatOptions.map(element=>{return <option value = {element} key = {element}>{element}</option>})}\r\n                </select>\r\n                \r\n                \r\n\r\n                <select \r\n                className = \"stat-button severe-stat\"\r\n                onChange = {(event)=>{return severeStatFunction(event.target.value)}}\r\n                >\r\n                    {severeStatOptions.map(element=>{return <option value = {element} key = {element}>{element}</option>})}\r\n                </select>\r\n\r\n                <select \r\n                className = \"stat-button source-stat\"\r\n                onChange = {(event)=>{return sourceStatFunction(event.target.value)}}\r\n                >\r\n                    {sourceStatOptions.map(element=>{return <option value = {element} key = {element}>{element}</option>})}\r\n                </select>\r\n                \r\n                <select \r\n                className = \"stat-button case-stat\"\r\n                onChange = {(event)=>{return caseStatFunction(event.target.value)}}\r\n                >\r\n                    {caseStatOptions.map(element=>{return <option value = {element} key = {element}>{element}</option>})}\r\n                </select>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StatButtons;","import React, {useState,useEffect} from \"react\"\nimport './stylesheets/App.css';\nimport './stylesheets/DateSlider.css';\nimport './stylesheets/Loading.css'\nimport './stylesheets/Streamgraph.css'\nimport './stylesheets/Map.css'\nimport $ from 'jquery';\nimport { BrowserView, MobileView } from \"react-device-detect\";\nimport * as d3 from \"d3\";\nimport Streamgraph from \"./components/Streamgraph.js\";\nimport DateSlider from \"./components/DateSlider.js\";\nimport Loading from \"./components/Loading\";\nimport Map from \"./components/Map\"\nimport StatButtons from \"./components/StatButtons.js\"\n\nfunction App() {\n\n    const [totalRecords,setTotalRecords] = useState();\n    const [curRecords,setCurRecords] = useState(0);\n    const [newData,setNewData] = useState([]);\n    const [allData,setAllData] = useState([]);\n    const [inputData,setInputData] = useState([]);\n    const [streamInputData,setStreamInputData] = useState([]);\n    const [mapInputData,setMapInputData] = useState([]);\n    const [streamHoverID,setStreamHoverID] = useState() // The neighbourhood that we are hovering on the streamgraph\n    const [mapHoverID,setMapHoverID] = useState() // The neighbourhood that we are hovering on the map\n    \n    // At the parent level all Dates will be stored in milliseconds\n    const [allDates,setAllDates] = useState([]);\n    const [viewDate,setViewDate] = useState([]);\n    const [timeStat,setTimeStat] = useState('Reported Date');//and Episode Date\n    const [caseStat,setCaseStat] = useState(\"Count\")// and per-capita\n    const [severeStat,setSevereStat] = useState(\"All Levels of Severity\")// Hospitalized/Intubated/ICU\n    const [sourceStat,setSourceStat] = useState(\"All Sources\")//Travel/Close Contact/\n    const [ageStat, setAgeStat] = useState(\"All Age Groups\")\n    const [outcomeStat, setOutcomeStat] = useState(\"All Outcomes\")\n    const [genderStat, setGenderStat] = useState(\"All Genders\")\n\n    const baseUrl = \"https://ckan0.cf.opendata.inter.prod-toronto.ca/api/3/action/datastore_search?id=e5bf35bc-e681-43da-b2ce-0242d00922ad\"\n    // const baseUrl2 = \"https://ckan0.cf.opendata.inter.prod-toronto.ca/api/3/action/package_show?id=64b54586-6180-4485-83eb-81e8fae3b8fe\"\n    // const baseUrl3= \"https://ckan0.cf.opendata.inter.prod-toronto.ca/datastore/dump/e5bf35bc-e681-43da-b2ce-0242d00922ad\"\n\n    useEffect(()=>{\n        $.ajax({\n            url:baseUrl,\n            cache:\"true\",\n            dataType:\"jsonp\",\n            success:function(data){\n                console.log(\"firstYay\",data);\n                setTotalRecords(data['result']['total'])\n                // setTotalRecords(200)\n            },\n            error:function(data){console.log(\"firstBoo\",data)}\n        })\n    },[baseUrl])\n\n    useEffect(()=>{\n        if(totalRecords){\n            console.log(\"total records\",totalRecords)\n            var loops = Math.round(totalRecords)/100 + 1;\n            for (var i = 0; i<=100*loops;i=i+100){\n                $.ajax({\n                    url:baseUrl+\"&offset=\"+i,\n                    cache:\"true\",\n                    dataType:\"jsonp\",\n                    success:function(data){\n                        setNewData(data['result']['records'])\n                    },\n                    error:function(data){console.log(\"booNext\",data)}\n                })\n            }\n        }\n        else{return}\n\n    },[totalRecords])\n\n    // When new data is received, setAllData and setCurRecords\n    useEffect(()=>{\n        setAllData(allData.concat(newData))\n        setCurRecords(allData.length)\n    },[newData])\n\n    // Once all the data is loaded, then setInputData and setAllDates\n    useEffect(()=>{\n        console.log(\"useEffect allData\")\n        if(allData&&totalRecords){\n            if (allData.length<totalRecords){return}\n            else{\n                console.log(\"DONE\");\n                var loadingScreen = document.querySelector(\".loading-screen\")\n                if(loadingScreen){loadingScreen.remove()}\n                setInputData(allData);\n                setStreamInputData(allData)\n                setMapInputData(allData)\n                var newAllDates = allData.map((element)=>{\n                    return (element['Episode Date'],element['Reported Date'])\n                })\n                // console.log(newallDates)\n                setAllDates(newAllDates)\n            }\n        }\n    },[allData])\n\n    useEffect(()=>{\n        console.log(\"useEffect allDates\")\n        var startDate = d3.min(allDates,dateString=>{return new Date(dateString).setHours(0,0,0,0)})\n        var endDate = d3.max(allDates,dateString=>{return new Date(dateString).setHours(0,0,0,0)})\n        console.log(startDate,endDate)\n        setViewDate([startDate,endDate])\n    },[allDates])\n\n    // Changes to DateSlider and timeStat/caseStat/severeStat\n    useEffect(()=>{\n        console.log(\"useEffect viewDate\")\n        var newInputData = allData.filter((element)=>{\n            return (new Date(element[timeStat])>viewDate[0]&&new Date(element[timeStat])<viewDate[1])\n        })\n        setInputData(newInputData)\n        setStreamInputData(newInputData)\n        setMapInputData(newInputData)\n    },[viewDate])\n\n    const streamHoverFunc = function(streamHoodID){\n        setStreamHoverID(streamHoodID)\n    }\n\n    const streamClickFunc = function(streamHoodName,date){\n        console.log(streamHoodName,date)\n    }\n\n    const mapToggleAllFunc = function(toggleVal){\n        if (toggleVal==\"selectall\"){\n            setStreamInputData(inputData)\n        }\n        if (toggleVal==\"deselectall\"){\n            setStreamInputData([])\n        }\n    }\n\n    const mapClickFunc = function(mapHoodName){\n        var mapBoundary = d3.select(\"#map_\"+mapHoodName.replace(/[^A-Z0-9]/ig, \"_\"))\n        console.log(mapHoodName,mapBoundary)\n        if (mapBoundary.classed(\"deselected\")){\n            // append streamdata\n            mapBoundary.classed(\"deselected\",!mapBoundary.classed(\"deselected\"))\n            var selectStreamData = inputData.filter((eachRecord)=>{return eachRecord['Neighbourhood Name']==mapHoodName})\n            var newStreamData = streamInputData.concat(selectStreamData)\n            console.log(\"if\",inputData.length)\n            console.log(streamInputData.length + \"+\" + selectStreamData.length +\"=\"+newStreamData.length)\n            setStreamInputData(newStreamData)\n        }\n        else{\n            // remove streamdata\n            mapBoundary.classed(\"deselected\",!mapBoundary.classed(\"deselected\"))\n            var toBeRemoved = streamInputData.filter((eachRecord)=>{return eachRecord['Neighbourhood Name']==mapHoodName})\n            var newStreamData = streamInputData.filter((eachRecord)=>{return eachRecord['Neighbourhood Name']!=mapHoodName})\n            console.log(\"else\",inputData.length)\n            console.log(streamInputData.length+\"-\"+toBeRemoved.length+\"=\"+newStreamData.length)\n            console.log(newStreamData)\n            setStreamInputData(newStreamData)\n        }\n\n    }\n\n    const mapHoverFunc = function(mapHoodID){\n        // console.log(\"parent detects mapHover\",nHood)\n        setMapHoverID(mapHoodID)\n    }\n    \n\n  return (\n      <React.Fragment>\n          <BrowserView viewClassName = \"app browserView\">\n              <Loading totalRecords = {totalRecords} curRecords = {curRecords}></Loading>\n              <div className = \"header browser\"> Toronto COVID Cases by Neighbourhood </div>\n              <div className = \"app-window browser\">\n                  <div className = \"left-container browser\">\n\n                    <DateSlider \n                        allDates = {allDates} \n                        sliderFunction = {(val)=>{setViewDate(val)}}\n                    ></DateSlider> \n\n                    <StatButtons\n                        timeStatFunction = {(val)=>{setTimeStat(val)}}\n                        caseStatFunction = {(val)=>{setCaseStat(val)}}\n                        severeStatFunction = {(val)=>{setSevereStat(val)}}\n                        ageStatFunction = {(val)=>{setAgeStat(val)}}\n                        sourceStatFunction = {(val)=>{setSourceStat(val)}}\n                        genderStatFunction = {(val)=>{setGenderStat(val)}}\n                        outcomeStatFunction = {(val)=>{setOutcomeStat(val)}}\n                     ></StatButtons>\n\n                    <Streamgraph \n                        streamInputData = {streamInputData} \n                        streamHoverFunction = {streamHoverFunc}\n                        streamClickFunction = {streamClickFunc}\n                        viewDate = {viewDate}\n                        timeStat = {timeStat}\n                        caseStat = {caseStat}\n                        severeStat = {severeStat}\n                        sourceStat = {sourceStat}\n                        ageStat = {ageStat}\n                        mapHoverID = {mapHoverID}\n                    ></Streamgraph>\n\n                  </div>\n                  <div className = \"right-container browser\">\n                    <Map \n                        mapInputData = {mapInputData} \n                        mapClickFunction = {mapClickFunc}\n                        mapHoverFunction = {mapHoverFunc}\n                        mapToggleAllFunc = {mapToggleAllFunc}\n                        viewDate = {viewDate}\n                        timeStat = {timeStat}\n                        caseStat = {caseStat}\n                        severeStat = {severeStat}\n                        sourceStat = {sourceStat}\n                        ageStat = {ageStat}\n                        streamHoverID = {streamHoverID}\n                    ></Map>\n                  </div>\n              </div>\n          </BrowserView>\n          \n          <MobileView viewClassName = \"app mobileView\">\n              <Loading totalRecords = {totalRecords} curRecords = {curRecords}></Loading>\n          </MobileView>\n          \n      </React.Fragment>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}